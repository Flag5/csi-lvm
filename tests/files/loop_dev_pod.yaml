# create /dev/loopX device nodes before they are needed.
#
# Normally, new nodes are created dynamically by the kernel. But nodes
# in a KinD cluster are started with a copy of /dev from the host and
# loop devices created later on do not show up in that static /dev
# (https://github.com/kubernetes-sigs/kind/issues/1248). Creating
# "enough" (100 in this pod) in advance avoids running out of
# loop devices.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: kube-system
---
apiVersion: v1
kind: Pod
metadata:
  name: create-loop-devs
  namespace: kube-system
spec:
  tolerations:
  - operator: Exists
    effect: NoSchedule
  containers:
  - name: loopdev
    command:
    - sh
    - -c
    - |
      while true; do
        for i in $(seq 0 101); do
            if ! [ -e /dev/loop$i ]; then
                mknod /dev/loop$i b 7 $i
            fi
        done
      done
    image: alpine:3.6
    imagePullPolicy: IfNotPresent
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - name: dev
      mountPath: /dev
  volumes:
  - name: dev
    hostPath:
      path: /dev
